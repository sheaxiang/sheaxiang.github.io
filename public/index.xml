<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shea&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on Shea&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 27 Mar 2021 18:29:08 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Hugo, Typora, GitHub Pages搭建博客</title>
      <link>/post/building-blog-with-hugo-typora-github-pages/</link>
      <pubDate>Sat, 27 Mar 2021 18:29:08 +0800</pubDate>
      
      <guid>/post/building-blog-with-hugo-typora-github-pages/</guid>
      <description>简述 在没有服务器和域名的情况下,想自己写博客,需要怎么做呢? 答案是使用Hugo, Typora, GitHub来搭建属于自己的博客,我们先来看下各自简介 Hugo: 是</description>
    </item>
    
    <item>
      <title>MySQL优化:回表查询和覆盖索引</title>
      <link>/post/mysql-optimization-return-table-query-and-overlay-index/</link>
      <pubDate>Mon, 29 Jun 2020 01:10:16 +0800</pubDate>
      
      <guid>/post/mysql-optimization-return-table-query-and-overlay-index/</guid>
      <description>今天看mysql优化时,发现这个知识点有点模糊了,就重新整理下 回表是什么? 简单来说, 执行一条sql语句, 如果查询条件为普通索引(非聚簇cu索</description>
    </item>
    
    <item>
      <title>两数相加-php版</title>
      <link>/post/add-two-numbers-php-version/</link>
      <pubDate>Mon, 29 Jun 2020 01:05:28 +0800</pubDate>
      
      <guid>/post/add-two-numbers-php-version/</guid>
      <description>题目: 给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。 如果，我们将</description>
    </item>
    
    <item>
      <title>laravel源码分析-生命周期</title>
      <link>/post/laravel-source-code-analysis-life-cycle/</link>
      <pubDate>Tue, 04 Jun 2019 01:01:42 +0800</pubDate>
      
      <guid>/post/laravel-source-code-analysis-life-cycle/</guid>
      <description>前提:使用的laravel版本为5.7,因为涉及到的流程比较复杂,请结合具体代码查看 文件名:public/index.php 1 $app = require_once __DIR__.&amp;#39;/../bootstrap/app.php&amp;#39;; 文件名</description>
    </item>
    
    <item>
      <title>两数之和-php版</title>
      <link>/post/sum-of-two-numbers-php-version/</link>
      <pubDate>Sat, 25 May 2019 00:59:05 +0800</pubDate>
      
      <guid>/post/sum-of-two-numbers-php-version/</guid>
      <description>我们先来看题目: 1 2 3 4 5 6 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可</description>
    </item>
    
    <item>
      <title>php返回换行的json数据</title>
      <link>/post/php-returns-the-wrapped-json-data/</link>
      <pubDate>Thu, 21 Feb 2019 00:55:10 +0800</pubDate>
      
      <guid>/post/php-returns-the-wrapped-json-data/</guid>
      <description>今天刚好需要返回拼接数据,展示一大堆数据,需要用到换行,原来想着使用html标签:&amp;lt;br/&amp;gt;,不行,也用过\r,也不行,后面想到</description>
    </item>
    
    <item>
      <title>使用golang写简单的web服务器</title>
      <link>/post/using-golang-to-write-a-simple-web-server/</link>
      <pubDate>Fri, 25 Jan 2019 00:50:55 +0800</pubDate>
      
      <guid>/post/using-golang-to-write-a-simple-web-server/</guid>
      <description>golang是一门用了就不想停下来的语言,简单实用易部署,我也开始了学习golang的路程,因为我主php,学习一门新语言难免会涉及到web</description>
    </item>
    
    <item>
      <title>laravel php 使用阿里云OSS</title>
      <link>/post/laravel-php-uses-alibaba-cloud-oss/</link>
      <pubDate>Thu, 24 Jan 2019 00:44:27 +0800</pubDate>
      
      <guid>/post/laravel-php-uses-alibaba-cloud-oss/</guid>
      <description>前段时间做了一个视频上传,及存储播放的功能,使用的是阿里云的OSS,总结记录下 首先当然是开通阿里云的OSS对象存储,然后新建一个 Bucket 新建 Bucket 然后</description>
    </item>
    
    <item>
      <title>单精度和双精度</title>
      <link>/post/single-precision-and-double-precision/</link>
      <pubDate>Sat, 24 Nov 2018 00:39:31 +0800</pubDate>
      
      <guid>/post/single-precision-and-double-precision/</guid>
      <description>单精度:也称为float,占4个字节,32位,有效位数为7位由1位符号,8位指数,23位小数组成 双精度:也称为double,占8个字节,64</description>
    </item>
    
    <item>
      <title>element-ui 表单验证rule不识别</title>
      <link>/post/element-ui-form-validation-rule-not-recognized/</link>
      <pubDate>Wed, 14 Nov 2018 00:36:01 +0800</pubDate>
      
      <guid>/post/element-ui-form-validation-rule-not-recognized/</guid>
      <description>最近在使用laravel+vue+element-ui编写程序,在使用表单验证时,出现表单有值但是验证不通过的情况,后来恍然大悟,是要v-m</description>
    </item>
    
    <item>
      <title>PHP 两个问号 ?? 和 ?:的区别</title>
      <link>/post/the-difference-between-two-question-marks-in-php/</link>
      <pubDate>Fri, 19 Oct 2018 00:30:49 +0800</pubDate>
      
      <guid>/post/the-difference-between-two-question-marks-in-php/</guid>
      <description>PHP的三元运算符已经很常用了,即:(expr1) ? (expr2) : (expr3) 在 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3 还有一种就是 ?:的形式,自p</description>
    </item>
    
    <item>
      <title>解决PhpStorm代码不补全不提示的问题</title>
      <link>/post/solve-the-problem-of-phpstorm-code-not-complete-and-not-prompt/</link>
      <pubDate>Wed, 30 May 2018 00:27:27 +0800</pubDate>
      
      <guid>/post/solve-the-problem-of-phpstorm-code-not-complete-and-not-prompt/</guid>
      <description>今天phpstorm用着用着发现代码不提示了，不会自动引入类了，然后就在网上找方法，解决办法如下： 进入phpstorm , file -&amp;gt; Invalidate Caches / Resta</description>
    </item>
    
    <item>
      <title>PHP 可变数量的参数列表 …</title>
      <link>/post/php-variable-number-of-parameter-list/</link>
      <pubDate>Tue, 27 Mar 2018 00:20:55 +0800</pubDate>
      
      <guid>/post/php-variable-number-of-parameter-list/</guid>
      <description>PHP在用户自定义函数中支持可变数量的参数列表，在PHP5.6及以上的版本中，由语法…语法实现： 1 2 3 4 5 6 7 8 9 function sum(...$numbers) { $a = 0; foreach ($numbers as $number) { $a +=</description>
    </item>
    
    <item>
      <title>三段式版本号，和Composer波浪线符号 ~ 和幂符号 ^ 的区别</title>
      <link>/post/three-segment-version-number-and-composer-symbol/</link>
      <pubDate>Sat, 10 Mar 2018 00:17:55 +0800</pubDate>
      
      <guid>/post/three-segment-version-number-and-composer-symbol/</guid>
      <description>三段式版本号的意义： 1 2 3 1：大版本 2：小版本 3：补丁版本 ^符号和~符号的意义： 1 2 ~1.2.3 代表 1.2.3 &amp;lt;= 版本号 &amp;lt; 1.3.0 //只改变最末尾的版本 ^1.2.3 代表 1.2.3 &amp;lt;= 版本</description>
    </item>
    
    <item>
      <title>git tag标签的使用</title>
      <link>/post/the-use-of-git-tag/</link>
      <pubDate>Sat, 03 Mar 2018 00:14:23 +0800</pubDate>
      
      <guid>/post/the-use-of-git-tag/</guid>
      <description>原来一直不知道composer require这种格式是如何实现的： 1 composer require &amp;#34;sheaxiang/action-log:^1.1&amp;#34; 下面来看下如何实现： 一：首先创建一个git仓库，将代码上传上去 二：</description>
    </item>
    
    <item>
      <title>Laravel的辅助函数列表</title>
      <link>/post/list-of-auxiliary-functions-of-laravel/</link>
      <pubDate>Wed, 28 Feb 2018 00:09:37 +0800</pubDate>
      
      <guid>/post/list-of-auxiliary-functions-of-laravel/</guid>
      <description>数组： array_add() 如果给的键不在数组中，则会把给定的键值添加到数组中： 1 2 3 $array = array_add([&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Desk&amp;#39;], &amp;#39;price&amp;#39;, 100); // [&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;Desk&amp;#39;, &amp;#39;price&amp;#39; =&amp;gt; 100] 这里合并数组有另外的一个方法： 1 2 3 $person = [&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;shea&amp;#39;]</description>
    </item>
    
    <item>
      <title>在Windows下设置Redis服务</title>
      <link>/post/setting-up-redis-service-in-windows/</link>
      <pubDate>Mon, 26 Feb 2018 00:05:07 +0800</pubDate>
      
      <guid>/post/setting-up-redis-service-in-windows/</guid>
      <description>Redis常规启动为运行命令： 1 redis-server redis.windows.conf 但这样如果cmd窗口关闭，Redis会消失，所以要将Redis放入Windows服务，需运行命令： 1 redis-server --service-install</description>
    </item>
    
    <item>
      <title>redis启动出错Creating Server TCP listening socket 127.0.0.1:6379: bind: No error</title>
      <link>/post/redis-startup-error-creating-server-tcp-listening-socket/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:09 +0800</pubDate>
      
      <guid>/post/redis-startup-error-creating-server-tcp-listening-socket/</guid>
      <description>windows下安装redis第一次启动报错： 1 [16768] 26 Feb 13:54:50.513 # Creating Server TCP listening socket 127.0.0.1:6379: bind: No error 解决方法：在命令行中运行 1 2 3 4 5 redis-cli.exe 127.0.0.1:6379&amp;gt;shutdown not connected&amp;gt;exit 然后重新运行redis</description>
    </item>
    
    <item>
      <title>PHP7的新特性详解–返回类型（Return Types）</title>
      <link>/post/new-features-of-php7-return-type/</link>
      <pubDate>Fri, 23 Feb 2018 23:51:17 +0800</pubDate>
      
      <guid>/post/new-features-of-php7-return-type/</guid>
      <description>PHP 5.x 目前在PHP 5.x中，没有办法来指定一个方法应该返回哪种类型的结果，你可能会说，可以转换返回的值啊，我们可以猜测返回结果的具体类型，但它</description>
    </item>
    
    <item>
      <title>PHP 可变变量 “$$”</title>
      <link>/post/php-variable/</link>
      <pubDate>Fri, 23 Feb 2018 23:44:32 +0800</pubDate>
      
      <guid>/post/php-variable/</guid>
      <description>有时候使用可变变量名是很方便的。就是说，一个变量的变量名可以动态的设置和使用。一个普通的变量通过声明来设置，例如： 1 2 3 &amp;lt;?php $a = &amp;#39;hello&amp;#39;; ?&amp;gt; 一个可变变</description>
    </item>
    
    <item>
      <title>关于 RESTful API 设计的总结</title>
      <link>/post/summary-of-restful-api-design/</link>
      <pubDate>Sun, 11 Feb 2018 23:24:56 +0800</pubDate>
      
      <guid>/post/summary-of-restful-api-design/</guid>
      <description>为什么要用 RESTful RESTful 给我的最大感觉就是规范、易懂和优雅，一个结构清晰、易于理解的 API 完全可以省去许多无意义的沟通和文档。并且 RESTful 现在越来越流行， 在开始</description>
    </item>
    
  </channel>
</rss>